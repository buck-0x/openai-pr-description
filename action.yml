name: 'Generate PR Description with OpenAI'
description: "Autofill you pull request with a high quality description by harvesting the power of OpenAI and ChatGPT"
inputs:
  github_token:
    description: 'The GitHub token'
    required: true
  openai_api_key:
    description: 'OpenAI API key'
    required: true
  pull_request_id:
    description: 'Pull request ID (otherwise attempt to extract it from the GitHub metadata)'
    required: false
    default: ''
  allowed_users:
    description: 'Comma-separated list of GitHub usernames this action will run for, if empty it will run for all users'
    required: false
    default: ''
  openai_model:
    description: 'OpenAI model to use, needs to be compatible with the chat/completions endpoint'
    required: false
    default: 'gpt-4o-mini'
  max_tokens:
    description: 'Maximum number of prompt tokens to use'
    required: false
    default: '1000'
  temperature:
    description: 'Temperature for the model, higher values will make the model more creative, lower values will make it more conservative'
    required: false
    default: '1.0'
  system_prompt:
    description: 'System prompt to use for the model'
    required: false
    default: 'You are a Senior Software Engineer who writes pull request descriptions'
  sample_prompt:
    description: 'Sample prompt to use for the model'
    required: false
    default: |
        The title of the pull request is "Enable valgrind on CI [WEB-124]" and the following changes took place: 

        Changes in file .github/workflows/build-ut-coverage.yml: @@ -24,6 +24,7 @@ jobs:
              run: |
                sudo apt-get update
                sudo apt-get install -y lcov
        +          sudo apt-get install -y valgrind
                sudo apt-get install -y ${{ matrix.compiler.cc }}
                sudo apt-get install -y ${{ matrix.compiler.cxx }}
            - name: Checkout repository
        @@ -48,3 +49,7 @@ jobs:
              with:
                files: coverage.info
                fail_ci_if_error: true
        +      - name: Run valgrind
        +        run: |
        +          valgrind --tool=memcheck --leak-check=full --leak-resolution=med \
        +            --track-origins=yes --vgdb=no --error-exitcode=1 ${build_dir}/test/command_parser_test
        Changes in file test/CommandParserTest.cpp: @@ -566,7 +566,7 @@ TEST(CommandParserTest, ParsedCommandImpl_WhenArgumentIsSupportedNumericTypeWill
          unsigned long long expectedUnsignedLongLong { std::numeric_limits<unsigned long long>::max() };
          float expectedFloat { -164223.123f }; // std::to_string does not play well with floating point min()
          double expectedDouble { std::numeric_limits<double>::max() };
        -    long double expectedLongDouble { std::numeric_limits<long double>::max() };
        +    long double expectedLongDouble { 123455678912349.1245678912349L };
        
          auto command = UnparsedCommand::create(expectedCommand, "dummyDescription"s)
                              .withArgs<int, long, unsigned long, long long, unsigned long long, float, double, long double>();
  sample_response:
    description: 'A sample of an ideal response based on the sample prompt'
    required: false
    default: |
      ## Description
      This pull request adds a new feature that allows users to reset their passwords directly from the login screen. 

      ## Changes Made
      - Added a "Forgot Password" link on the login screen
      - Implemented the logic for users to reset their passwords via email
      - Updated the database schema to store password reset tokens

      ## Screenshots
      ![Login Screen with Forgot Password Link](/screenshots/login_screen.png)

      ## How to Test
      1. Click on the "Forgot Password" link on the login screen
      2. Enter your email address and submit the form
      3. Check your email for a password reset link
      4. Click on the reset link and follow the instructions
      5. Log in with your new password 

      ## Risk Level
      Low - This feature has been thoroughly tested and reviewed.

      ## Dependencies
      - Utilizes the email service to send password reset links
      - Relies on the backend API for processing password resets

      ## Related Issues
      Closes [WEB-124]
runs:
  using: 'docker'
  image: 'Dockerfile'
branding:
  icon: 'cpu'
  color: 'green'
